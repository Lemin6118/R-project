quakes:lat
quakes=lat
quakes(lat)
quakes[,1]
quakes[1,]
quakes[,1]
View(quakes)
View(quakes[,1]>1)
View(quakes[,1])
View(quakes[,])
View(quakes[1,])
View(quakes[,1])
names(quakes)
names(quakes)#
names(quakes)
names(quakes).lat
names(quakes)
dim(quakes)
str(quakes)
http://openapi.molit.go.kr:8081/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTrade
http://openapi.molit.go.kr:8081/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTrade?LAWD_CD=11110&DEAL_YMD=201512&serviceKey=D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D
URL <- http://openapi.molit.go.kr:8081/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTrade?LAWD_CD=11110&DEAL_YMD=201512&serviceKey=D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D
URL <- 'http://openapi.molit.go.kr:8081/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTrade?LAWD_CD=11110&DEAL_YMD=201512&serviceKey=D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D''
;
''
URL <- 'http://openapi.molit.go.kr:8081/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTrade?LAWD_CD=11110&DEAL_YMD=201512&serviceKey=D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D'
url()
url
URL
URL <- 'http://openapi.molit.go.kr:8081/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTrade'
myKey <- 'D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D'
res <- GET(url = URL,)
res <- GET(url = URL,)
res <- GET(url = URL,
query = list(LAWD_CD = '11110',
DEAL_NO = '201512',
serviceKey = myKey %>% I() ))
res <- GET(url = URL,
query = list(LAWD_CD = '11110',
DEAL_NO = '201512',
serviceKey = myKey %>% I() ))
library(tidyverse)
library(httr)
myKey <- Sys.getenv('D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D')
res <- GET(url = URL,
query = list(LAWD_CD = '11110',
DEAL_NO = '201512',
serviceKey = myKey %>% I() ))
res <- GET(url = URL,
query = list(LAWD_CD = '11110',
DEAL_NO = '201512',
serviceKey = myKey %>% I() ))
myKey <- Sys.getenv('D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D')
res <- get(url = URL,
query = list(LAWD_CD = '11110',
DEAL_NO = '201512',
serviceKey = myKey %>% I() ))
res <- get(url = URL,
query = list(LAWD_CD = '11110',DEAL_NO = '201512',serviceKey = myKey %>% I() ))
res <- get(url = URL,
query = list(LAWD_CD = '11110',DEAL_NO = '201512',serviceKey = myKey ))
res <- get(url = URL,
query = list(LAWD_CD = '11110',
DEAL_NO = '201512',
serviceKey = myKey %>% I() ))
res <- get(url = URL, query = list(LAWD_CD = '11110',DEAL_NO = '201512',serviceKey = myKey %>% I() ))
URL
myKey
myKey
myKey <- Sys.getenv('D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D')
myKey
Sys.getenv('D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D')
myKey <- 'D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D'
res <- get(url = URL, query = list(LAWD_CD = '11110',DEAL_NO = '201512',serviceKey = myKey %>% I() ))
Sys.getenv('D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D')
myKey
myKey <- Sys.getenv('D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D')
library(tidyverse)
instal
install.packages("tidyverse")
install.packages("httr")
install.packages("rvest")
install.packages("jsonlite")
library(tidyverse)
library(httr)
library(rvest)
library(rvest)
library(jsonlite)
library(jsonlite)
res <- get(url = URL, query = list(LAWD_CD = '11110',DEAL_NO = '201512',serviceKey = myKey %>% I() ))
myKey <- Sys.getenv('D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D')
res <- get(url = URL, query = list(LAWD_CD = '11110',DEAL_NO = '201512',serviceKey = myKey %>% I() ))
library(tidyverse)
library(rvest)
library(httr)
library(rvest)
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
myKey
myKey <- Sys.getenv('D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D')
URL <- 'http://openapi.molit.go.kr:8081/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTrade'
res <- get(url = URL, query = list(LAWD_CD = '11110',DEAL_NO = '201512',serviceKey = myKey %>% I() ))
res <- GET(url = URL, query = list(LAWD_CD = '11110',DEAL_NO = '201512',serviceKey = myKey %>% I() ))
print(x=res)
res %>%
content(as = 'text', encoding = 'UTF-8') %>%
fromJSON() ->json
str(object = json)
str(object = json)
install.packages("XML")
library(XML)
#api_url을 통해 웹에 접속하여 XML 파일 다운로드 및 파싱
#http://openapi.seoul.go.kr:8088/sample/xml/ListPublicReservationCulture/1/5/%EC%BD%98%EC%84%9C%ED%8A%B8
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
#api_url을 통해 웹에 접속하여 XML 파일 다운로드 및 파싱
#http://openapi.seoul.go.kr:8088/sample/xml/ListPublicReservationCulture/1/5/%EC%BD%98%EC%84%9C%ED%8A%B8
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
myKey <- 'D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D'
#api_url을 통해 웹에 접속하여 XML 파일 다운로드 및 파싱
#http://openapi.seoul.go.kr:8088/sample/xml/ListPublicReservationCulture/1/5/%EC%BD%98%EC%84%9C%ED%8A%B8
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
startindex = '1'
endindex = '50'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
parsedXml <-xmlParse(api_url)
url = URL
> auth_key = myKey
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, type, LAWD_CD, DEAL_YMD, auth_key)
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, LAWD_CD, DEAL_YMD, auth_key)
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, LAWD_CD, DEAL_YMD, auth_key)
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, 'LAWD_CD=11110'', 'DEAL_YMD=201512', auth_key)
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, 'LAWD_CD=11110', 'DEAL_YMD=201512', auth_key)
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, '?LAWD_CD=11110', 'DEAL_YMD=201512', auth_key)
parsedXml <-xmlParse(api_url)
url
parsedXml
library(XML)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey))
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey),sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey),sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey),sep = '/')
parsedXml <-xmlParse(api_url)
parsedXml
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
parsedXml
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, myKey, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
parsedXml
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"), type, myKey, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"), type, myKey, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
api_url
parsedXml
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, myKey, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
parsedXml
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, myKey, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, myKey, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
git
demo
install.packages("wordcloud")
library(wordcloud)
word <- c("인천광역시","강화군","옹진군")
wordcloud(word,frequency,colors =  "blue")
wordcloud(word,frequency,colors =  "blue")
frequency <- c(1000.500,30)
wordcloud(word,frequency,colors="blue")
wordcloud(word,frequency,colors="blue")
wordcloud(word,frequency,colors="blue")
frequency <- c(1000,500,30)
wordcloud(word,frequency,colors="blue")
wordcloud(word,frequency,colors="rainbow")
wordcloud(word,frequency,colors="rainbow")
wordcloud(word,frequency,colors=rainbow)
wordcloud(word,frequency,colors=rainbow(length(word)))
wordcloud(word,frequency,colors=rainbow(length(word)))
word <- c("인천광역시","서울시","금정동")
frequency <- c(1000,500,30)
wordcloud(word,frequency,colors=rainbow(length(word)))
install.packages("rstudioapi")
setwd(dirname(rstudio::getsource))
install.packages("rstudioapi")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
loc <- read.csv("./sigun_code.csv", fileEncoding="UTF-8")
loc$code <- as.character(loc$code)
head(loc, 2)
datelist <- seq(from = as.Date('2021-01-01'),
to   = as.Date('2021-12-31'),
by    = '1 month')
datelist <- format(datelist, format = '%Y%m')
datelist[1:3]
#인증키
service_key <- 'D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D'
service_key
url_list <- list()
cnt <-0
for(i in 1:nrow(loc)){
for(j in 1:length(datelist)){
cnt <- cnt + 1
url_list[cnt] <- paste0("http://openapi.molit.go.kr:8081/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTrade?",
"LAWD_CD=", loc[i,1],
"&DEAL_YMD=", datelist[j],
"&numOfRows=", 100,
"&serviceKey=", service_key)
}
Sys.sleep(0.1)
msg <- paste0("[", i,"/",nrow(loc), "]  ", loc[i,3], " 의 크롤링 목록이 생성됨 => 총 [", cnt,"] 건")
cat(msg, "\n\n")
}
length(url_list)
browseURL(paste0(url_list[1]))
library(XML)        # install.packages("XML")
library(data.table) # install.packages("data.table")
library(stringr)    # install.packages("stringr")
raw_data <- list()        # xml 임시 저장소
root_Node <- list()       # 거래내역 추출 임시 저장소
total <- list()           # 거래내역 정리 임시 저장소
raw_data <- list()        # xml 임시 저장소
root_Node <- list()       # 거래내역 추출 임시 저장소
total <- list()           # 거래내역 정리 임시 저장소
for(i in 1:length(url_list)){
raw_data[[i]] <- xmlTreeParse(url_list[i], useInternalNodes = TRUE,encoding = "utf-8")
root_Node[[i]] <- xmlRoot(raw_data[[i]])
items <- root_Node[[i]][[2]][['items']]  # 전체 거래내역(items) 추출
size <- xmlSize(items)                   # 전체 거래 건수 확인
#---# [4단계: 거래 내역 추출]
item <- list()  # 전체 거래내역(items) 저장 임시 리스트 생성
item_temp_dt <- data.table()  # 세부 거래내역(item) 저장 임시 테이블 생성
Sys.sleep(.1)  # 0.1초 멈춤
for(m in 1:size){  # 전체 거래건수(size)만큼 반복
#---# 세부 거래내역 분리
item_temp <- xmlSApply(items[[m]],xmlValue)
item_temp_dt <- data.table(year = item_temp[4],     # 거래 년
month = item_temp[7],    # 거래 월
day = item_temp[8],      # 거래 일
price = item_temp[1],    # 거래금액
code = item_temp[12],    # 지역코드
dong_nm = item_temp[5],  # 법정동
jibun = item_temp[11],   # 지번
con_year = item_temp[3], # 건축연도
apt_nm = item_temp[6],   # 아파트 이름
area = item_temp[9],     # 전용면적
floor = item_temp[13])   # 층수
item[[m]] <- item_temp_dt}    # 분리된 거래내역 순서대로 저장
apt_bind <- rbindlist(item)     # 통합 저장
#---# [5단계: 응답 내역 저장]
region_nm <- subset(loc, code== str_sub(url_list[i],115, 119))$addr_1 # 지역명 추출
month <- str_sub(url_list[i],130, 135)   # 연월(YYYYMM) 추출
path <- as.character(paste0("./02_raw_data/", region_nm, "_", month,".csv")) # 저장위치 설정
write.csv(apt_bind, path)     # csv 저장
msg <- paste0("[", i,"/",length(url_list), "] 수집한 데이터를 [", path,"]에 저장 합니다.") # 알림 메시지
cat(msg, "\n\n")
}   # 바깥쪽 반복문 종료
.libPaths()
